<Window x:Class="LM.App.Wpf.Views.StagingEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:core="clr-namespace:LM.Core.Models;assembly=LM.Core"
        Title="Review staged items" Height="520" Width="800"
        WindowStartupLocation="CenterOwner" ResizeMode="CanResize">

	<!-- =====================  RESOURCES  ===================== -->
	<Window.Resources>
		<BooleanToVisibilityConverter x:Key="BoolToVis"/>

		<!-- Publication template -->
		<DataTemplate x:Key="PublicationTemplate">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<!-- Left column (common) -->
				<StackPanel Grid.Column="0">
					<TextBlock Text="Title"/>
					<TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>

					<TextBlock Text="Display name"/>
					<DockPanel>
						<TextBox Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged}" />
						<Button Content="Generate" Margin="8,0,0,0" Click="OnGenerateShortTitle"/>
					</DockPanel>

					<TextBlock Text="Authors (comma-separated)"/>
					<TextBox Text="{Binding AuthorsCsv, UpdateSourceTrigger=PropertyChanged}"/>

					<DockPanel>
						<StackPanel Width="160">
							<TextBlock Text="Year"/>
							<TextBox Text="{Binding Year, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
						<StackPanel Margin="12,0,0,0">
							<TextBlock Text="Source (journal/venue)"/>
							<TextBox Text="{Binding Source, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
					</DockPanel>

					<TextBlock Text="Tags (comma-separated)"/>
					<TextBox Text="{Binding TagsCsv, UpdateSourceTrigger=PropertyChanged}"/>

					<CheckBox Content="Internal" IsChecked="{Binding IsInternal}" Margin="0,8,0,0"/>
				</StackPanel>

				<!-- Right column (publication-specific) -->
				<StackPanel Grid.Column="1" Margin="12,0,0,0">
					<DockPanel>
						<StackPanel Width="200">
							<TextBlock Text="DOI"/>
							<TextBox Text="{Binding Doi, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
						<StackPanel Margin="12,0,0,0" Width="160">
							<TextBlock Text="PMID"/>
							<TextBox Text="{Binding Pmid, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
					</DockPanel>

					<TextBlock Text="Internal ID"/>
					<TextBox Text="{Binding InternalId, UpdateSourceTrigger=PropertyChanged}"/>

					<TextBlock Text="Notes"/>
					<TextBox Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}"
							 AcceptsReturn="True" Height="120"/>

					<TextBlock Text="Similar to (if any)"/>
					<TextBox Text="{Binding MatchedTitle}" IsReadOnly="True"/>
					<TextBlock Text="Similarity"/>
					<TextBlock Text="{Binding Similarity, StringFormat={}{0:P0}}"/>
				</StackPanel>
			</Grid>
		</DataTemplate>

		<!-- Document/SlideDeck/Report template -->
		<DataTemplate x:Key="DocumentTemplate">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<!-- Left column (common) -->
				<StackPanel Grid.Column="0">
					<TextBlock Text="Title"/>
					<TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>

					<TextBlock Text="Display name"/>
					<DockPanel>
						<TextBox Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged}" />
						<Button Content="Generate" Margin="8,0,0,0" Click="OnGenerateShortTitle"/>
					</DockPanel>

					<TextBlock Text="Authors (comma-separated)"/>
					<TextBox Text="{Binding AuthorsCsv, UpdateSourceTrigger=PropertyChanged}"/>

					<DockPanel>
						<StackPanel Width="160">
							<TextBlock Text="Year"/>
							<TextBox Text="{Binding Year, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
						<StackPanel Margin="12,0,0,0">
							<TextBlock Text="Source (owner/department)"/>
							<TextBox Text="{Binding Source, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
					</DockPanel>

					<TextBlock Text="Tags (comma-separated)"/>
					<TextBox Text="{Binding TagsCsv, UpdateSourceTrigger=PropertyChanged}"/>

					<CheckBox Content="Internal" IsChecked="{Binding IsInternal}" Margin="0,8,0,0"/>
				</StackPanel>

				<!-- Right column (no DOI/PMID here) -->
				<StackPanel Grid.Column="1" Margin="12,0,0,0">
					<TextBlock Text="Internal ID"/>
					<TextBox Text="{Binding InternalId, UpdateSourceTrigger=PropertyChanged}"/>

					<TextBlock Text="Notes"/>
					<TextBox Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}"
							 AcceptsReturn="True" Height="120"/>

					<TextBlock Text="Similar to (if any)"/>
					<TextBox Text="{Binding MatchedTitle}" IsReadOnly="True"/>
					<TextBlock Text="Similarity"/>
					<TextBlock Text="{Binding Similarity, StringFormat={}{0:P0}}"/>
				</StackPanel>
			</Grid>
		</DataTemplate>
	</Window.Resources>
	<!-- ===================  END RESOURCES  =================== -->

	<Grid Margin="12">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<!-- Header: single row with type selector + badges -->
		<StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,8" VerticalAlignment="Center">
			<TextBlock Text="Review and edit metadata" FontWeight="Bold"/>
			<TextBlock Text="{Binding IndexLabel}" Margin="12,0,0,0" />

			<TextBlock Text="Type:" Margin="24,0,6,0" VerticalAlignment="Center"/>
			<ComboBox ItemsSource="{Binding EntryTypes}"
					  SelectedItem="{Binding SelectedType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					  Width="150" />

			<!-- Badges -->
			<Border Background="#FFE0E0E0" CornerRadius="4" Padding="6,2" Margin="16,0,0,0"
					Visibility="{Binding Current.IsDuplicate, Converter={StaticResource BoolToVis}}">
				<TextBlock Text="Exact duplicate in library" Foreground="#FF404040" FontWeight="SemiBold"/>
			</Border>

			<Border Background="#FFFDEEB5" CornerRadius="4" Padding="6,2" Margin="8,0,0,0"
					Visibility="{Binding Current.IsNearMatch, Converter={StaticResource BoolToVis}}">
				<TextBlock>
					<Run Text="Near match: "/>
					<Run Text="{Binding Current.MatchedTitle}" FontStyle="Italic"/>
				</TextBlock>
			</Border>
		</StackPanel>

		<!-- Body: dynamic by Current.Type, with visual state -->
		<Border Grid.Row="1">
			<Border.Style>
				<Style TargetType="Border">
					<Setter Property="Background" Value="{x:Null}"/>
					<Setter Property="Opacity"    Value="1"/>
					<Setter Property="IsEnabled"  Value="True"/>
					<Style.Triggers>
						<!-- Exact duplicate: grey, disabled -->
						<DataTrigger Binding="{Binding Current.IsDuplicate}" Value="True">
							<Setter Property="Opacity"   Value="0.5"/>
							<Setter Property="IsEnabled" Value="False"/>
							<Setter Property="Background" >
								<Setter.Value>
									<SolidColorBrush Color="#FFF0F0F0"/>
								</Setter.Value>
							</Setter>
						</DataTrigger>

						<!-- Near match: amber highlight -->
						<DataTrigger Binding="{Binding Current.IsNearMatch}" Value="True">
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="#FFFDEEB5"/>
								</Setter.Value>
							</Setter>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Border.Style>

			<ContentControl Content="{Binding Current}">
				<ContentControl.Style>
					<Style TargetType="ContentControl">
						<Setter Property="ContentTemplate" Value="{StaticResource DocumentTemplate}"/>
						<Style.Triggers>
							<!-- Simple: bind to Current.Type -->
							<DataTrigger Binding="{Binding Current.Type}" Value="{x:Static core:EntryType.Publication}">
								<Setter Property="ContentTemplate" Value="{StaticResource PublicationTemplate}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ContentControl.Style>
			</ContentControl>
		</Border>


		<!-- Footer -->
		<DockPanel Grid.Row="2" LastChildFill="False" Margin="0,8,0,0">
			<Button Content="◀ Previous" Click="OnPrev"/>
			<Button Content="Next ▶" Margin="8,0,0,0" Click="OnNext"/>
			<Button Content="Close" Margin="8,0,0,0" Click="OnClose" HorizontalAlignment="Right"/>
		</DockPanel>
	</Grid>
</Window>

<UserControl x:Class="LM.App.Wpf.Views.LibraryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:LM.App.Wpf.Views.Behaviors"
             xmlns:libraryViews="clr-namespace:LM.App.Wpf.Views.Library"
             xmlns:filters="clr-namespace:LM.Core.Models.Filters;assembly=LM.Core"
             xmlns:converters="clr-namespace:LM.App.Wpf.Views.Converters"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"

             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="900">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Library/LibraryCommonResources.xaml" />
        <ResourceDictionary Source="Library/LibraryEntryDetailTemplate.xaml" />
        <ResourceDictionary Source="Templates/LibraryResultsColumns.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <converters:EnumEqualsConverter x:Key="EnumEqualsConverter" />
    </ResourceDictionary>

  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="310"/>
      <ColumnDefinition Width="5"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="5"/>
      <ColumnDefinition Width="360"/>
    </Grid.ColumnDefinitions>

    <!-- Filters Panel -->
    <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" DataContext="{Binding Filters}">
      <StackPanel Margin="12">
        <TextBlock Text="Library Filters" FontWeight="Bold" Margin="0,0,0,8"/>
        <CheckBox Content="Use full-text search"
                  IsChecked="{Binding UseFullTextSearch}"
                  Margin="0,0,0,8"/>
        <StackPanel Margin="0,0,0,12"
                    Visibility="{Binding UseFullTextSearch, Converter={StaticResource BoolToVisibilityConverter}}">
          <TextBlock Text="Full-text query"/>
          <TextBox Text="{Binding FullTextQuery, UpdateSourceTrigger=PropertyChanged}"/>
          <TextBlock Text="Search within" Margin="0,6,0,0"/>
          <UniformGrid Columns="3" Margin="0,4,0,0">
            <CheckBox Content="Title" IsChecked="{Binding FullTextInTitle}"/>
            <CheckBox Content="Abstract" IsChecked="{Binding FullTextInAbstract}"/>
            <CheckBox Content="Content" IsChecked="{Binding FullTextInContent}"/>
          </UniformGrid>
        </StackPanel>
        <TextBlock Text="Title contains"/>
        <TextBox Text="{Binding TitleContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="Author contains"/>
        <TextBox Text="{Binding AuthorContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="Tags"/>
        <libraryViews:TagTokenSelector SelectedTags="{Binding SelectedTags}"
                                       TagVocabulary="{Binding TagVocabulary}"/>
        <StackPanel Orientation="Horizontal" Margin="0,6,0,6">
          <TextBlock Text="Match mode:" VerticalAlignment="Center" Margin="0,0,8,0"/>
          <RadioButton Content="Any"
                       GroupName="TagMatchMode"
                       Margin="0,0,6,0"
                       IsChecked="{Binding TagMatchMode, Mode=TwoWay, Converter={StaticResource EnumEqualsConverter}, ConverterParameter={x:Static filters:TagMatchMode.Any}}"/>
          <RadioButton Content="All"
                       GroupName="TagMatchMode"
                       Margin="0,0,6,0"
                       IsChecked="{Binding TagMatchMode, Mode=TwoWay, Converter={StaticResource EnumEqualsConverter}, ConverterParameter={x:Static filters:TagMatchMode.All}}"/>
          <RadioButton Content="Not"
                       GroupName="TagMatchMode"
                       IsChecked="{Binding TagMatchMode, Mode=TwoWay, Converter={StaticResource EnumEqualsConverter}, ConverterParameter={x:Static filters:TagMatchMode.Not}}"/>
        </StackPanel>

        <TextBlock Text="Source contains"/>
        <TextBox Text="{Binding SourceContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="Internal ID contains"/>
        <TextBox Text="{Binding InternalIdContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="DOI contains"/>
        <TextBox Text="{Binding DoiContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="PMID contains"/>
        <TextBox Text="{Binding PmidContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="NCT contains"/>
        <TextBox Text="{Binding NctContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="Added by contains"/>
        <TextBox Text="{Binding AddedByContains, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Text="Type"/>
        <UniformGrid Columns="2" Margin="0,6,0,0">
          <CheckBox Content="Publication" IsChecked="{Binding TypePublication}"/>
          <CheckBox Content="Presentation" IsChecked="{Binding TypePresentation}"/>
          <CheckBox Content="White paper" IsChecked="{Binding TypeWhitePaper}"/>
          <CheckBox Content="Slide deck" IsChecked="{Binding TypeSlideDeck}"/>
          <CheckBox Content="Report" IsChecked="{Binding TypeReport}"/>
          <CheckBox Content="Other" IsChecked="{Binding TypeOther}"/>
        </UniformGrid>

        <TextBlock Text="Year range"/>
        <DockPanel>
          <TextBox Width="60" Text="{Binding YearFrom, UpdateSourceTrigger=PropertyChanged}"/>
          <TextBlock Text=" to " VerticalAlignment="Center" Margin="6,0,6,0"/>
          <TextBox Width="60" Text="{Binding YearTo, UpdateSourceTrigger=PropertyChanged}"/>
        </DockPanel>

        <TextBlock Text="Added on range"/>
        <DockPanel>
          <DatePicker Width="120" SelectedDate="{Binding AddedOnFrom, UpdateSourceTrigger=PropertyChanged}"/>
          <TextBlock Text=" to " VerticalAlignment="Center" Margin="6,0,6,0"/>
          <DatePicker Width="120" SelectedDate="{Binding AddedOnTo, UpdateSourceTrigger=PropertyChanged}"/>
        </DockPanel>

        <TextBlock Text="Visibility"/>
        <ComboBox SelectedValue="{Binding IsInternal}">
          <ComboBoxItem Content="Either" Tag="{x:Null}" IsSelected="True"/>
          <ComboBoxItem Content="External" Tag="False"/>
          <ComboBoxItem Content="Internal" Tag="True"/>
        </ComboBox>

        <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
          <Button Content="Search"
                  Margin="0,0,8,0"
                  Command="{Binding DataContext.SearchCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
          <Button Content="Clear"
                  Margin="0,0,8,0"
                  Command="{Binding ClearCommand}"/>
          <Button Content="Save preset"
                  Margin="0,0,8,0"
                  Command="{Binding SavePresetCommand}"/>
          <Button Content="Load preset"
                  Margin="0,0,8,0"
                  Command="{Binding LoadPresetCommand}"/>
          <Button Content="Manage presets"
                  Command="{Binding ManagePresetsCommand}"/>
        </StackPanel>
        <StackPanel Margin="0,16,0,0">
          <TextBlock Text="Saved presets" FontWeight="SemiBold"/>
          <TextBlock Text="No saved presets yet."
                     Margin="0,4,0,0"
                     Foreground="DimGray"
                     FontStyle="Italic">
            <TextBlock.Style>
              <Style TargetType="TextBlock">
                <Setter Property="Visibility" Value="Visible"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding HasSavedPresets}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>
          <ItemsControl ItemsSource="{Binding SavedPresets}"
                        Margin="0,8,0,0"
                        Visibility="{Binding HasSavedPresets, Converter={StaticResource BoolToVisibilityConverter}}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <Button Command="{Binding DataContext.ApplyPresetCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                        CommandParameter="{Binding}"
                        Margin="0,0,0,6"
                        HorizontalContentAlignment="Stretch">
                  <StackPanel>
                    <TextBlock Text="{Binding Name}" FontWeight="SemiBold"/>
                    <TextBlock Text="{Binding SavedUtc, StringFormat='Saved {0:yyyy-MM-dd HH:mm}'}" FontSize="12" Opacity="0.7"/>
                  </StackPanel>
                </Button>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </StackPanel>
      </StackPanel>
    </ScrollViewer>

    <GridSplitter Grid.Column="1"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Background="#FFE0E0E0"
                  ShowsPreview="True"
                  Width="5"/>

    <!-- Results -->
    <Grid Grid.Column="2" DataContext="{Binding Results}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <StackPanel Orientation="Horizontal" Margin="12">
        <TextBlock Text="Results" FontWeight="Bold"/>
        <TextBlock Text="(Full-text ranking)"
                   Margin="8,0,0,0"
                   Foreground="DimGray"
                   Visibility="{Binding ResultsAreFullText, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <Menu Margin="12,0,0,0"
              VerticalAlignment="Center"
              DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <MenuItem Header="Columns"
                    ItemsSource="{Binding ColumnOptions}">
            <MenuItem.ItemContainerStyle>
              <Style TargetType="MenuItem">
                <Setter Property="Header" Value="{Binding DisplayName}" />
                <Setter Property="IsCheckable" Value="True" />
                <Setter Property="IsChecked" Value="{Binding IsVisible, Mode=TwoWay}" />
              </Style>
            </MenuItem.ItemContainerStyle>
          </MenuItem>
        </Menu>
      </StackPanel>

      <DataGrid Grid.Row="1"
                ItemsSource="{Binding Items}"
                SelectedItem="{Binding Selected}"
                Margin="12"
                IsReadOnly="True"
                AllowDrop="True"
                CanUserReorderColumns="True"
                CanUserResizeColumns="True"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
        <DataGrid.Resources>
          <Style TargetType="DataGridRow">
            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
            <Setter Property="ContextMenu">
              <Setter.Value>
                <ContextMenu>
                  <MenuItem Header="Open"
                            Command="{Binding PlacementTarget.Tag.OpenEntryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                  <MenuItem Header="Open containing folder"
                            Command="{Binding PlacementTarget.Tag.OpenContainingFolderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                  <MenuItem Header="Copy citation / DOI"
                            Command="{Binding PlacementTarget.Tag.CopyMetadataCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                  <MenuItem Header="Copy workspace path"
                            Command="{Binding PlacementTarget.Tag.CopyWorkspacePathCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                  <Separator />
                  <MenuItem Header="Edit entry"
                            Command="{Binding PlacementTarget.Tag.EditEntryCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                </ContextMenu>
              </Setter.Value>
            </Setter>
          </Style>
        </DataGrid.Resources>
        <i:Interaction.Behaviors>
          <behaviors:FileDropBehavior UseDataGridRowContext="True"
                                      PreviewDragOverCommand="{Binding PreviewDropCommand}"
                                      DropCommand="{Binding DropCommand}" />
          <behaviors:DataGridColumnVisibilityBehavior VisibilityMap="{Binding DataContext.ColumnVisibility, RelativeSource={RelativeSource AncestorType=UserControl}}" />
        </i:Interaction.Behaviors>
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="SelectionChanged">
            <i:InvokeCommandAction Command="{Binding HandleSelectionChangedCommand}"
                                   CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
          </i:EventTrigger>
        </i:Interaction.Triggers>
        <DataGrid.Columns>
          <StaticResource ResourceKey="LibraryResultsColumn.Title" />
          <StaticResource ResourceKey="LibraryResultsColumn.Score" />
          <StaticResource ResourceKey="LibraryResultsColumn.Source" />
          <StaticResource ResourceKey="LibraryResultsColumn.Type" />
          <StaticResource ResourceKey="LibraryResultsColumn.Year" />
          <StaticResource ResourceKey="LibraryResultsColumn.AddedOn" />
          <StaticResource ResourceKey="LibraryResultsColumn.AddedBy" />
          <StaticResource ResourceKey="LibraryResultsColumn.InternalId" />
          <StaticResource ResourceKey="LibraryResultsColumn.Doi" />
          <StaticResource ResourceKey="LibraryResultsColumn.Pmid" />
          <StaticResource ResourceKey="LibraryResultsColumn.Nct" />
          <StaticResource ResourceKey="LibraryResultsColumn.Authors" />
          <StaticResource ResourceKey="LibraryResultsColumn.Tags" />
          <StaticResource ResourceKey="LibraryResultsColumn.IsInternal" />
          <StaticResource ResourceKey="LibraryResultsColumn.Snippet" />
        </DataGrid.Columns>
      </DataGrid>

      <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="12">
        <Button Content="Open"
                Command="{Binding DataContext.OpenEntryCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
      </StackPanel>
    </Grid>

    <GridSplitter Grid.Column="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Background="#FFE0E0E0"
                  ShowsPreview="True"
                  Width="5"/>

    <Border Grid.Column="4" BorderBrush="#FFE0E0E0" BorderThickness="1,0,0,0" Background="#FFFDFDFD">
      <ScrollViewer VerticalScrollBarVisibility="Auto"
                    AllowDrop="True"
                    DataContext="{Binding Results}">
        <i:Interaction.Behaviors>
          <behaviors:FileDropBehavior PreviewDragOverCommand="{Binding PreviewDropCommand}"
                                      DropCommand="{Binding DropCommand}" />
        </i:Interaction.Behaviors>
        <Grid>

          <ContentPresenter x:Name="EntryDetailPresenter"
                            Content="{Binding Selected}"
                            ContentTemplate="{StaticResource LibraryEntryDetailTemplate}"
                            Margin="12">

            <ContentPresenter.Style>
              <Style TargetType="ContentPresenter">
                <Setter Property="Visibility" Value="Visible"/>
                <Style.Triggers>

                  <Trigger Property="Content" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                  </Trigger>

                </Style.Triggers>
              </Style>
            </ContentPresenter.Style>
          </ContentPresenter>

          <TextBlock Text="Select an entry to view details."
                     Margin="12"
                     FontStyle="Italic"
                     Foreground="Gray"
                     TextWrapping="Wrap"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Center">
            <TextBlock.Style>
              <Style TargetType="TextBlock">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>

                  <DataTrigger Binding="{Binding Content, ElementName=EntryDetailPresenter}" Value="{x:Null}">

                    <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </TextBlock.Style>
          </TextBlock>
        </Grid>
      </ScrollViewer>
    </Border>
  </Grid>
</UserControl>
